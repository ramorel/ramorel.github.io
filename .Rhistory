axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
animate(il_anim, fps = 10)
il_anim <- il %>%
filter(date > "2020-02-20") %>%
mutate(log_cases = log10(cases)) %>%
left_join(il_pop %>% select(county, population),
by = c("county")) %>%
ggplot() +
geom_sf(data = il_pop, aes(geometry = geometry)) +
geom_sf(aes(geometry = geometry, fill = log_cases)) +
scale_fill_viridis_c(name = "Cases (logged)") +
labs(x = "", y = "",
title = "COVID-19 Cases in Illinois by County",
subtitle = "{current_frame}",
caption = "Data from New York Times Covid-19 repository:\nhttps://github.com/nytimes/covid-19-data") +
transition_manual(date) +
theme(plot.background = element_rect(fill = "antiquewhite2", color = NA),
axis.ticks.x = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
animate(il_anim, fps = 10)
il_anim <-
il_per_cap %>%
ggplot() +
geom_sf(data = il_pop, aes(geometry = geometry)) +
geom_sf(aes(geometry = geometry, fill = cases_per), color = NA) +
scale_fill_viridis_c(name = "Cases per 10,000") +
labs(x = "", y = "",
title = "COVID-19 Cases in Illinois by County",
subtitle = "{current_frame}",
caption = "Data from New York Times Covid-19 repository:\nhttps://github.com/nytimes/covid-19-data") +
transition_manual(date) +
theme(plot.background = element_rect(fill = "cornsilk2", color = NA),
axis.ticks.x = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
animate(il_anim, fps = 10)
il
il_per_cap
il %>%
select(-fips) %>%
left_join(il %>% select(county, fips) %>% distinct(), by = "county") %>%
left_join(il_pop %>% select(county, population),
by = c("county")) %>%
mutate(cases_per = (cases/population) * 10000,
deaths_per = (deaths/population) * 100000)
il %>%
left_join(il_pop %>% select(county, population),
by = c("county")) %>%
mutate(cases_per = (cases/population) * 10000,
deaths_per = (deaths/population) * 100000)
il_per_cap <-
il %>%
left_join(il_pop %>% select(county, population),
by = c("county")) %>%
mutate(cases_per = (cases/population) * 10000,
deaths_per = (deaths/population) * 100000)
il_anim <-
il_per_cap %>%
mutate(cases_per = ifelse(cases_per == 0, NA, cases_per)) %>%
ggplot() +
geom_sf(data = il_pop, aes(geometry = geometry)) +
geom_sf(aes(geometry = geometry, fill = cases_per), color = NA) +
scale_fill_viridis_c(name = "Cases per 10,000") +
labs(x = "", y = "",
title = "COVID-19 Cases in Illinois by County",
subtitle = "{current_frame}",
caption = "Data from New York Times Covid-19 repository:\nhttps://github.com/nytimes/covid-19-data") +
transition_manual(date) +
theme(plot.background = element_rect(fill = "cornsilk2", color = NA),
axis.ticks.x = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
animate(il_anim, fps = 10)
il_anim <-
il_per_cap %>%
mutate(cases_per = ifelse(cases_per == 0, NA, cases_per)) %>%
ggplot() +
geom_sf(data = il_pop, aes(geometry = geometry)) +
geom_sf(aes(geometry = geometry, fill = cases_per), color = NA) +
scale_fill_viridis_c(name = "Cases per 10,000", na.value = "grey30") +
labs(x = "", y = "",
title = "Confirmed COVID-19 Cases per 10,000 in Illinois by County",
subtitle = "{current_frame}",
caption = "Data from New York Times Covid-19 repository:\nhttps://github.com/nytimes/covid-19-data") +
transition_manual(date) +
theme(plot.background = element_rect(fill = "cornsilk2", color = NA),
axis.ticks.x = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
animate(il_anim, fps = 10)
il_anim <-
il_per_cap %>%
mutate(cases_per = ifelse(cases_per == 0, NA, cases_per)) %>%
ggplot() +
geom_sf(data = il_pop, aes(geometry = geometry)) +
geom_sf(aes(geometry = geometry, fill = cases_per), color = NA) +
scale_fill_viridis_c(name = "Cases per 10,000", na.value = "grey70") +
labs(x = "", y = "",
title = "Confirmed COVID-19 Cases per 10,000 in Illinois by County",
subtitle = "{current_frame}",
caption = "Data from New York Times Covid-19 repository:\nhttps://github.com/nytimes/covid-19-data") +
transition_manual(date) +
theme(plot.background = element_rect(fill = "cornsilk2", color = NA),
axis.ticks.x = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
animate(il_anim, fps = 10)
il %>%
mutate(cases_per = ifelse(cases_per == 0, NA, cases_per)) %>%
ggplot() +
geom_sf(data = il_pop, aes(geometry = geometry))
il %>%
ggplot() +
geom_sf(data = il_pop, aes(geometry = geometry))
il %>%
ggplot() +
geom_sf(data = il_pop, aes(geometry = geometry)) +
geom_sf(aes(geometry = geometry, fill = cases_per))
il %>%
ggplot() +
geom_sf(aes(geometry = geometry, fill = cases_per)) +
geom_sf(data = il_pop, aes(geometry = geometry))
il %>% left_join(il_pop %>% select(county, population),
by = c("county")) %>%
ggplot() +
geom_sf(aes(geometry = geometry, fill = cases_per)) +
geom_sf(data = il_pop, aes(geometry = geometry))
il %>% left_join(il_pop %>% select(county, population),
by = c("county")) %>%
ggplot() +
geom_sf(data = il_pop, aes(geometry = geometry)) +
geom_sf(aes(geometry = geometry, fill = cases))
il %>% left_join(il_pop %>% select(county, population),
by = c("county")) %>%
ggplot() +
geom_sf(data = il_pop, aes(geometry = geometry)) +
geom_sf(aes(geometry = geometry, fill = cases))
il_anim <- il %>%
filter(date > "2020-02-20") %>%
mutate(log_cases = log10(cases)) %>%
left_join(il_pop %>% select(county, population),
by = c("county")) %>%
ggplot() +
geom_sf(data = il_pop, aes(geometry = geometry)) +
geom_sf(aes(geometry = geometry, fill = log_cases)) +
scale_fill_viridis_c(name = "Cases (logged)") +
labs(x = "", y = "",
title = "Confirmed COVID-19 Cases in Illinois by County (log scale)",
subtitle = "{current_frame}",
caption = "Notes. Gray indicates no cases.\nData from New York Times Covid-19 repository:\nhttps://github.com/nytimes/covid-19-data") +
transition_manual(date) +
theme(plot.background = element_rect(fill = "antiquewhite2", color = NA),
axis.ticks.x = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
animate(il_anim, fps = 10)
il_anim <-
il_per_cap %>%
mutate(cases_per = ifelse(cases_per == 0, NA, cases_per)) %>%
ggplot() +
geom_sf(data = il_pop, aes(geometry = geometry)) +
geom_sf(aes(geometry = geometry, fill = cases_per)) +
scale_fill_viridis_c(name = "Cases per 10,000", na.value = "grey70") +
labs(x = "", y = "",
title = "Confirmed COVID-19 Cases per 10,000 in Illinois by County",
subtitle = "{current_frame}",
caption = "Data from New York Times Covid-19 repository:\nhttps://github.com/nytimes/covid-19-data") +
transition_manual(date) +
theme(plot.background = element_rect(fill = "cornsilk2", color = NA),
axis.ticks.x = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
animate(il_anim, fps = 10)
il %>%
ggplot() +
geom_sf(data = il_pop, aes(geometry = geometry, fill = population)) +
#geom_sf(aes(geometry = geometry, fill = cases_per)) +
scale_fill_viridis_c(name = "Population") +
il %>%
ggplot() +
geom_sf(data = il_pop, aes(geometry = geometry, fill = population)) +
#geom_sf(aes(geometry = geometry, fill = cases_per)) +
scale_fill_viridis_c(name = "Population")
il %>%
ggplot() +
geom_sf(data = il_pop, aes(geometry = geometry, fill = population)) +
#geom_sf(aes(geometry = geometry, fill = cases_per)) +
scale_fill_viridis_c(name = "Population") + scale_fill_continuous(formatter = comma)
il %>%
ggplot() +
geom_sf(data = il_pop, aes(geometry = geometry, fill = population)) +
#geom_sf(aes(geometry = geometry, fill = cases_per)) +
scale_fill_viridis_c(name = "Population") + scale_fill_continuous(comma)
il %>%
ggplot() +
geom_sf(data = il_pop, aes(geometry = geometry, fill = population)) +
#geom_sf(aes(geometry = geometry, fill = cases_per)) +
scale_fill_viridis_c(name = "Population") + scale_fill_continuous(scales::comma)
il %>%
ggplot() +
geom_sf(data = il_pop, aes(geometry = geometry, fill = population)) +
#geom_sf(aes(geometry = geometry, fill = cases_per)) +
scale_fill_viridis_c(name = "Population", labels = scales::comma)
il %>%
ggplot() +
geom_sf(data = il_pop, aes(geometry = geometry, fill = population)) +
#geom_sf(aes(geometry = geometry, fill = cases_per)) +
scale_fill_gradient(name = "Population", labels = scales::comma)
il %>%
ggplot() +
geom_sf(data = il_pop, aes(geometry = geometry, fill = population)) +
#geom_sf(aes(geometry = geometry, fill = cases_per)) +
scale_fill_gradient(name = "Population", labels = scales::comma, low = "slategray", high = "tomato")
il %>%
ggplot() +
geom_sf(data = il_pop, aes(geometry = geometry, fill = population)) +
#geom_sf(aes(geometry = geometry, fill = cases_per)) +
scale_fill_gradient(name = "Population", labels = scales::comma)
il %>%
ggplot() +
geom_sf(data = il_pop, aes(geometry = geometry, fill = population)) +
#geom_sf(aes(geometry = geometry, fill = cases_per)) +
scale_fill_distiller(name = "Population", labels = scales::comma)
il %>%
ggplot() +
geom_sf(data = il_pop, aes(geometry = geometry, fill = population)) +
#geom_sf(aes(geometry = geometry, fill = cases_per)) +
scale_fill_distiller(name = "Population", labels = scales::comma, palette = "RdBl")
RColorBrewer::display.brewer.all()
il %>%
ggplot() +
geom_sf(data = il_pop, aes(geometry = geometry, fill = population)) +
#geom_sf(aes(geometry = geometry, fill = cases_per)) +
scale_fill_distiller(name = "Population", labels = scales::comma, palette = "Spectral")
il_pop %>% st_centroid()
il %>%
left_join(il_pop %>% select(county, population) %>% st_centroid(),
by = c("county"))
il %>%
left_join(il_pop %>% select(county, population) %>% st_centroid(),
by = c("county")) %>%
ggplot() +
geom_sf(data = il_pop, aes(geometry = geometry, fill = population)) +
geom_sf(aes(geometry = geometry, size = cases)) +
scale_fill_distiller(name = "Population", labels = scales::comma, palette = "Spectral")
il %>%
left_join(il_pop %>% select(county, population) %>% st_centroid(),
by = c("county")) %>%
ggplot() +
geom_sf(aes(geometry = geometry, size = cases))
il %>%
left_join(il_pop %>% select(county, population) %>% st_centroid(),
by = c("county"))
il %>%
left_join(il_pop %>% select(county, population),
by = c("county")) %>%
ggplot() +
geom_sf(aes(geometry = geometry, size = cases))
il %>%
left_join(il_pop %>% select(county, population),
by = c("county")) %>%
ggplot() +
geom_sf(aes(geometry = st_centroid(geometry)))
il %>%
left_join(il_pop %>% select(county, population),
by = c("county")) %>%
ggplot() +
geom_sf(aes(geometry = st_centroid(geometry), size = cases))
il %>%
left_join(il_pop %>% select(county, population),
by = c("county"))
il %>%
left_join(il_pop %>% select(county, population),
by = c("county")) %>%
il %>%
left_join(il_pop %>% select(county, population),
by = c("county")) %>% mutate(lat = map_dbl(geometry, ~st_point_on_surface(.x)[[2]]))
il %>%
left_join(il_pop %>% select(county, population),
by = c("county")) %>% mutate(lon = map_dbl(geometry, ~st_point_on_surface(.x)[[1]]), lat = map_dbl(geometry, ~st_point_on_surface(.x)[[2]])) %>%
ggplot() + geom_sf(data = il_pop, aes(geometry = geometry, fill = population)) +
geom_point(aes(x = lon, y = lat, size = cases))
il %>%
left_join(il_pop %>% select(county, population),
by = c("county")) %>% mutate(lon = map_dbl(geometry, ~st_point_on_surface(.x)[[1]]), lat = map_dbl(geometry, ~st_point_on_surface(.x)[[2]])) %>%
ggplot() + geom_sf(data = il_pop, aes(geometry = geometry, fill = population)) +
geom_point(aes(x = lon, y = lat, size = cases), color = "tomato", alpha = 0.7)
il_per_cap
il %>%
left_join(il_pop %>% select(county, population),
by = c("county")) %>% mutate(lon = map_dbl(geometry, ~st_point_on_surface(.x)[[1]]), lat = map_dbl(geometry, ~st_point_on_surface(.x)[[2]])) %>%
ggplot() + geom_sf(data = il_pop, aes(geometry = geometry, fill = population)) +
geom_point(aes(x = lon, y = lat, size = cases), color = "tomato", alpha = 0.7)
RColorBrewer::display.brewer.all()
il_per_cap %>%
mutate(lon = map_dbl(geometry, ~st_point_on_surface(.x)[[1]]),
lat = map_dbl(geometry, ~st_point_on_surface(.x)[[2]])) %>%
ggplot() +
geom_sf(data = il_pop, aes(geometry = geometry, fill = population)) +
eom_point(aes(x = lon, y = lat, size = cases), color = "tomato", alpha = 0.7) +
scale_fill_distiller(name = "Population", labels = scales::comma, palette = "PuOr") +
labs(x = "", y = "",
title = "Confirmed COVID-19 Cases per 10,000 in Illinois by County",
subtitle = "{current_frame}",
caption = "Data from New York Times Covid-19 repository:\nhttps://github.com/nytimes/covid-19-data")
il_per_cap %>%
mutate(lon = map_dbl(geometry, ~st_point_on_surface(.x)[[1]]),
lat = map_dbl(geometry, ~st_point_on_surface(.x)[[2]])) %>%
ggplot() +
geom_sf(data = il_pop, aes(geometry = geometry, fill = population)) +
geom_point(aes(x = lon, y = lat, size = cases), color = "tomato", alpha = 0.7) +
scale_fill_distiller(name = "Population", labels = scales::comma, palette = "PuOr") +
labs(x = "", y = "",
title = "Confirmed COVID-19 Cases per 10,000 in Illinois by County",
subtitle = "{current_frame}",
caption = "Data from New York Times Covid-19 repository:\nhttps://github.com/nytimes/covid-19-data")
il_per_cap %>%
mutate(lon = map_dbl(geometry, ~st_point_on_surface(.x)[[1]]),
lat = map_dbl(geometry, ~st_point_on_surface(.x)[[2]])) %>%
ggplot() +
geom_sf(data = il_pop, aes(geometry = geometry, fill = population)) +
geom_point(aes(x = lon, y = lat, size = cases), color = "tomato", alpha = 0.7) +
scale_fill_distiller(name = "Population", labels = scales::comma, palette = "PuOr") +
labs(x = "", y = "",
title = "Confirmed COVID-19 Cases per 10,000 in Illinois by County",
subtitle = "{current_frame}",
caption = "Data from New York Times Covid-19 repository:\nhttps://github.com/nytimes/covid-19-data") +
transition_manual(date) +
theme(plot.background = element_rect(fill = "cornsilk2", color = NA),
axis.ticks.x = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
il_per_cap %>%
mutate(lon = map_dbl(geometry, ~st_point_on_surface(.x)[[1]]),
lat = map_dbl(geometry, ~st_point_on_surface(.x)[[2]])) %>%
ggplot() +
geom_sf(data = il_pop, aes(geometry = geometry, fill = population)) +
geom_point(aes(x = lon, y = lat, size = cases_per), color = "tomato", alpha = 0.7) +
scale_fill_distiller(name = "Population", labels = scales::comma, palette = "PRGn") +
labs(x = "", y = "",
title = "Confirmed COVID-19 Cases per 10,000 in Illinois by County",
subtitle = "Date: {current_frame}",
caption = "Data from New York Times Covid-19 repository:\nhttps://github.com/nytimes/covid-19-data") +
transition_manual(date) +
theme(plot.background = element_rect(fill = "cornsilk2", color = NA),
axis.ticks.x = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
il_anim <-
il_per_cap %>%
mutate(lon = map_dbl(geometry, ~st_point_on_surface(.x)[[1]]),
lat = map_dbl(geometry, ~st_point_on_surface(.x)[[2]])) %>%
ggplot() +
geom_sf(data = il_pop, aes(geometry = geometry, fill = population)) +
geom_point(aes(x = lon, y = lat, size = cases_per), color = "tomato", alpha = 0.7) +
scale_fill_distiller(name = "Population", labels = scales::comma, palette = "Blues") +
labs(x = "", y = "",
title = "Confirmed COVID-19 Cases per 10,000 in Illinois by County",
subtitle = "Date: {current_frame}",
caption = "Data from New York Times Covid-19 repository:\nhttps://github.com/nytimes/covid-19-data") +
transition_manual(date) +
theme(plot.background = element_rect(fill = "cornsilk2", color = NA),
axis.ticks.x = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
animate(il_anim, fps = 10)
il_anim <-
il_per_cap %>%
mutate(lon = map_dbl(geometry, ~st_point_on_surface(.x)[[1]]),
lat = map_dbl(geometry, ~st_point_on_surface(.x)[[2]])) %>%
ggplot() +
geom_sf(data = il_pop, aes(geometry = geometry, fill = population)) +
geom_point(aes(x = lon, y = lat, size = cases_per), color = "tomato", alpha = 0.7) +
scale_fill_distiller(name = "Population", labels = scales::comma, palette = "Blues", direction = -1) +
labs(x = "", y = "",
title = "Confirmed COVID-19 Cases per 10,000 in Illinois by County",
subtitle = "Date: {current_frame}",
caption = "Data from New York Times Covid-19 repository:\nhttps://github.com/nytimes/covid-19-data") +
transition_manual(date) +
theme(plot.background = element_rect(fill = "cornsilk2", color = NA),
axis.ticks.x = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
animate(il_anim, fps = 10)
il_anim <-
il_per_cap %>%
mutate(lon = map_dbl(geometry, ~st_point_on_surface(.x)[[1]]),
lat = map_dbl(geometry, ~st_point_on_surface(.x)[[2]])) %>%
ggplot() +
geom_sf(data = il_pop, aes(geometry = geometry, fill = population)) +
geom_point(aes(x = lon, y = lat, size = cases_per), color = "tomato", alpha = 0.7) +
scale_fill_distiller(name = "Population", labels = scales::comma, palette = "Blues", direction = 1) +
scale_size(name = "Cases per 10,000") +
labs(x = "", y = "",
title = "Confirmed COVID-19 Cases per 10,000 in Illinois by County",
subtitle = "Date: {current_frame}",
caption = "Data from New York Times Covid-19 repository:\nhttps://github.com/nytimes/covid-19-data") +
transition_manual(date) +
theme(plot.background = element_rect(fill = "cornsilk2", color = NA),
axis.ticks.x = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
animate(il_anim, fps = 10)
il_anim <-
il_per_cap %>%
mutate(lon = map_dbl(geometry, ~st_point_on_surface(.x)[[1]]),
lat = map_dbl(geometry, ~st_point_on_surface(.x)[[2]]),
log_pop = log(population, base = 10)) %>%
ggplot() +
geom_sf(data = il_pop, aes(geometry = geometry, fill = log_pop)) +
geom_point(aes(x = lon, y = lat, size = cases_per), color = "tomato", alpha = 0.7) +
scale_fill_distiller(name = "Logged Population", labels = scales::comma, palette = "Blues", direction = 1) +
scale_size(name = "Cases per 10,000") +
labs(x = "", y = "",
title = "Confirmed COVID-19 Cases per 10,000 in Illinois by County",
subtitle = "Date: {current_frame}",
caption = "Data from New York Times Covid-19 repository:\nhttps://github.com/nytimes/covid-19-data") +
transition_manual(date) +
theme(plot.background = element_rect(fill = "cornsilk2", color = NA),
axis.ticks.x = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
animate(il_anim, fps = 10)
il_anim <-
il_per_cap %>%
mutate(lon = map_dbl(geometry, ~st_point_on_surface(.x)[[1]]),
lat = map_dbl(geometry, ~st_point_on_surface(.x)[[2]])) %>%
ggplot() +
geom_sf(data = il_pop, aes(geometry = geometry, fill = log(population, base = 10))) +
geom_point(aes(x = lon, y = lat, size = cases_per), color = "tomato", alpha = 0.7) +
scale_fill_distiller(name = "Logged Population", labels = scales::comma, palette = "Blues", direction = 1) +
scale_size(name = "Cases per 10,000") +
labs(x = "", y = "",
title = "Confirmed COVID-19 Cases per 10,000 in Illinois by County",
subtitle = "Date: {current_frame}",
caption = "Data from New York Times Covid-19 repository:\nhttps://github.com/nytimes/covid-19-data") +
transition_manual(date) +
theme(plot.background = element_rect(fill = "cornsilk2", color = NA),
axis.ticks.x = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
animate(il_anim, fps = 10)
il_anim <-
il_per_cap %>%
mutate(lon = map_dbl(geometry, ~st_point_on_surface(.x)[[1]]),
lat = map_dbl(geometry, ~st_point_on_surface(.x)[[2]]),
cases_per = ifelse(cases_per == 0, NA, cases_per)) %>%
ggplot() +
geom_sf(data = il_pop, aes(geometry = geometry, fill = log(population, base = 10))) +
geom_point(aes(x = lon, y = lat, size = cases_per), color = "tomato", alpha = 0.7) +
scale_fill_distiller(name = "Logged Population", labels = scales::comma, palette = "Blues", direction = 1) +
scale_size(name = "Cases per 10,000") +
labs(x = "", y = "",
title = "Confirmed COVID-19 Cases per 10,000 in Illinois by County",
subtitle = "Date: {current_frame}",
caption = "Data from New York Times Covid-19 repository:\nhttps://github.com/nytimes/covid-19-data") +
transition_manual(date) +
theme(plot.background = element_rect(fill = "cornsilk2", color = NA),
axis.ticks.x = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
animate(il_anim, fps = 10)
