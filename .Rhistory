mutate(
cate_prop = cut(prop,
c(0, 0.25, 0.5, 0.75, 1),
labels = c("Between 0% and 25%",
"Between 25% and 50%",
"Between 50% and 75%",
"Between 75% and 100%"),
include.lowest = TRUE)) %>%
ggplot() +
geom_sf(aes(geometry =  geometry, fill = cate_prop), size = 0.2)
dat16_enroll %>%
filter(charter == 1) %>%
mutate(
cate_prop = cut(prop,
c(0, 0.25, 0.5, 0.75, 1),
labels = c("Between 0% and 25%",
"Between 25% and 50%",
"Between 50% and 75%",
"Between 75% and 100%"),
include.lowest = TRUE))
dat16_enroll %>%
filter(charter == 1) %>%
mutate(
cate_prop = cut(prop,
c(0, 0.25, 0.5, 0.75, 1),
labels = c("Between 0% and 25%",
"Between 25% and 50%",
"Between 50% and 75%",
"Between 75% and 100%"),
include.lowest = TRUE)) %>% st_as_sf()
dat16_enroll %>%
filter(charter == 1) %>%
mutate(
cate_prop = cut(prop,
c(0, 0.25, 0.5, 0.75, 1),
labels = c("Between 0% and 25%",
"Between 25% and 50%",
"Between 50% and 75%",
"Between 75% and 100%"),
include.lowest = TRUE)) %>% st_as_sf() %>%
ggplot() +
geom_sf(aes(geometry =  geometry, fill = cate_prop), size = 0.2)
dat16_enroll %>%
filter(charter == 1) %>%
mutate(
cate_prop = cut(prop,
c(0, 0.01, 0.1, 0.25, 0.5, 0.75, 0.95, 1),
labels = c("Under 1%",
"Between 1% and 10%",
"Between 10% and 25%",
"Between 25% and 50%",
"Between 50% and 75%",
"Between 75% and 95%",
"Above 95%"),
include.lowest = TRUE,
ordered_result = TRUE)) %>%
st_as_sf() %>%
ggplot() +
geom_sf(aes(geometry =  geometry, fill = cate_prop), size = 0.2) +
geom_sf(data = usa, fill = "transparent", inherit.aes = FALSE, size = 0.5) +
scale_fill_viridis_d(name = "", option = "inferno") +
labs(title = "Proportion of students enrolled in charter schools by county, 2016")
dat16_enroll %>%
filter(charter == 1) %>%
ggplot() +
geom_sf(aes(geometry =  geometry, fill = prop), size = 0.2) +
geom_sf(data = usa, fill = "transparent", inherit.aes = FALSE, size = 0.5) +
scale_fill_viridis_c(name = "", option = "inferno", imits = c(0, 1)) +
labs(title = "Proportion of students enrolled in charter schools by county, 2016")
dat16_enroll %>%
filter(charter == 1) %>%
ggplot() +
geom_sf(aes(geometry =  geometry, fill = prop), size = 0.2) +
geom_sf(data = usa, fill = "transparent", inherit.aes = FALSE, size = 0.5) +
scale_fill_viridis_c(name = "", option = "inferno", limits = c(0, 1)) +
labs(title = "Proportion of students enrolled in charter schools by county, 2016")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(educationdata)
library(sf)
library(tidycensus)
library(gganimate)
library(sp)
library(maps)
library(maptools)
options(tigris_use_cache = TRUE)
theme_set(
theme_void() +
theme(
text = element_text(family = "Raleway"),
plot.background = element_rect(fill = "snow1", color = "gray20"),
plot.margin = unit(c(0.25, 0.25, 0.25, 0.25), "cm"),
plot.title = element_text(size = 14, colour = "grey25", face = "bold"),
plot.subtitle = element_text(family = "Lato", size = 10, colour = "grey45"),
plot.caption = element_text(family = "Lato", size = 8, colour = "grey45"),
legend.margin=margin(),
legend.text = element_text(size = 8, family = "Lato"),
legend.title = element_text(size = 10, vjust = 0, family = "Lato"),
legend.key.size = unit(0.5, "cm")
)
)
school_dat <-
get_education_data(level = "schools",
source = "ccd",
topic = "directory",
filters = list(year = seq(from = 2000, to = 2016, by = 2))) %>%
na_if(., -2) %>%
filter(
fips <= 59,
!fips %in% c(2, 15)
) %>%
as_tibble()
kschool_dat <-
get_education_data(level = "schools",
source = "ccd",
topic = "directory",
filters = list(year = 2016)) %>%
na_if(., -2) %>%
filter(
fips <= 59,
!fips %in% c(2, 15)
) %>%
as_tibble()
school_dat <-
school_dat %>%
arrange(ncessch_num, year) %>%
group_by(city_location, state_location) %>%
fill(county_code, .direction = "downup") %>%
fill(longitude, .direction = "downup") %>%
fill(latitude, .direction = "downup") %>%
group_by(leaid) %>%
fill(county_code, .direction = "downup") %>%
fill(longitude, .direction = "downup") %>%
fill(latitude, .direction = "downup") %>%
ungroup()
# States with no charter law overall and by years
school_dat <-
school_dat %>%
mutate(
charter = ifelse(is.na(charter), 0, charter)
)
school_dat <-
get_education_data(level = "schools",
source = "ccd",
topic = "directory",
filters = list(year = 2016)) %>%
na_if(., -2) %>%
filter(
fips <= 59,
!fips %in% c(2, 15)
) %>%
as_tibble()
school_dat <-
school_dat %>%
arrange(ncessch_num, year) %>%
group_by(city_location, state_location) %>%
fill(county_code, .direction = "downup") %>%
fill(longitude, .direction = "downup") %>%
fill(latitude, .direction = "downup") %>%
group_by(leaid) %>%
fill(county_code, .direction = "downup") %>%
fill(longitude, .direction = "downup") %>%
fill(latitude, .direction = "downup") %>%
ungroup()
# States with no charter law overall and by years
school_dat <-
school_dat %>%
mutate(
charter = ifelse(is.na(charter), 0, charter)
)
Sys.Date()
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(educationdata)
library(sf)
library(tidycensus)
library(gganimate)
library(sp)
library(maps)
library(maptools)
options(tigris_use_cache = TRUE)
theme_set(
theme_void() +
theme(
text = element_text(family = "Raleway"),
plot.background = element_rect(fill = "snow1", color = "gray20"),
plot.margin = unit(c(0.25, 0.25, 0.25, 0.25), "cm"),
plot.title = element_text(size = 14, colour = "grey25", face = "bold"),
plot.subtitle = element_text(family = "Lato", size = 10, colour = "grey45"),
plot.caption = element_text(family = "Lato", size = 8, colour = "grey45"),
legend.margin=margin(),
legend.text = element_text(size = 8, family = "Lato"),
legend.title = element_text(size = 10, vjust = 0, family = "Lato"),
legend.key.size = unit(0.5, "cm")
)
)
dat16 <-
get_education_data(level = "schools",
source = "ccd",
topic = "directory",
filters = list(year = 2016)) %>%
na_if(., -2) %>%
filter(
fips <= 59,
!fips %in% c(2, 15)
)
# Some states have no charter laws (or did not at the time), and therefore no charters!
no_charter <- c("MT", "VT", "SD", "ND", "NE", "KY", "WV")
dat16 <-
dat16 %>%
mutate(
charter = ifelse(state_location %in% no_charter, 0, charter)
)
dat16_enroll <-
dat16 %>%
na_if(-2) %>%
group_by(charter, county_code, .drop = TRUE) %>%
summarize(enrollment = sum(enrollment, na.rm = TRUE)) %>%
arrange(county_code) %>%
group_by(county_code) %>%
mutate(
prop = round(enrollment / sum(enrollment, na.rm = TRUE), 2)
) %>%
ungroup() %>%
mutate(county_code = ifelse(nchar(county_code) < 5, paste0("0", county_code), county_code)) %>%
complete(charter, nesting(county_code), fill = list(enrollment = 0, prop = 0)) %>%
arrange(county_code)
dat16_enroll
acs16 <-
get_acs(
geography = "county",
year = 2016,
variables = c(
"B01001_004", # total male 5 to 9
"B01001_005", # total male 10 to 14
"B01001_006", # total male 15 to 17
"B01001_028", # total female 5 to 9
"B01001_029", # total female 10 to 14
"B01001_030"  # total female 15 to 17
),
geometry = TRUE,
summary_var	= "B01001_001",
output = "wide"
)
dat16_enroll <-
dat16_enroll %>%
filter(county_code %in% acs16$GEOID) %>%
left_join(acs16, by = c("county_code" = "GEOID"))
dat16_enroll$geometry
usa <- map('state', fill=TRUE, col="transparent", plot=FALSE)
usa <- st_as_sf(usa)
usa <- st_transform(usa, st_crs(dat16_enroll$geometry))
p1 <-
dat16_enroll %>%
filter(charter == 1) %>%
ggplot() +
geom_sf(aes(geometry =  geometry, fill = prop), size = 0.2) +
geom_sf(data = usa, fill = "transparent", inherit.aes = FALSE, size = 0.5) +
scale_fill_viridis_c(name = "", option = "inferno", limits = c(0, 1)) +
labs(title = "Proportion of students enrolled in charter schools by county, 2016")
p1
p2 <-
dat16_enroll %>%
filter(charter == 1) %>%
mutate(
cate_prop = cut(prop,
c(0, 0.01, 0.1, 0.25, 0.5, 0.75, 0.95, 1),
labels = c("Under 1%",
"Between 1% and 10%",
"Between 10% and 25%",
"Between 25% and 50%",
"Between 50% and 75%",
"Between 75% and 95%",
"Above 95%"),
include.lowest = TRUE,
ordered_result = TRUE)) %>%
st_as_sf() %>%
ggplot() +
geom_sf(aes(geometry =  geometry, fill = cate_prop), size = 0.2) +
geom_sf(data = usa, fill = "transparent", inherit.aes = FALSE, size = 0.5) +
scale_fill_viridis_d(name = "", option = "inferno") +
labs(title = "Proportion of students enrolled in charter schools by county, 2016")
p2
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(educationdata)
library(sf)
library(tidycensus)
library(gganimate)
library(sp)
library(maps)
library(maptools)
options(tigris_use_cache = TRUE)
theme_set(
theme_void() +
theme(
text = element_text(family = "Raleway"),
plot.background = element_rect(fill = "snow1", color = "gray20"),
plot.margin = unit(c(0.25, 0.25, 0.25, 0.25), "cm"),
plot.title = element_text(size = 14, colour = "grey25", face = "bold"),
plot.subtitle = element_text(family = "Lato", size = 10, colour = "grey45"),
plot.caption = element_text(family = "Lato", size = 8, colour = "grey45"),
legend.margin=margin(),
legend.text = element_text(size = 8, family = "Lato"),
legend.title = element_text(size = 10, vjust = 0, family = "Lato"),
legend.key.size = unit(0.5, "cm")
)
)
dat16 <-
get_education_data(level = "schools",
source = "ccd",
topic = "directory",
filters = list(year = 2016)) %>%
na_if(., -2) %>%
filter(
fips <= 59,
!fips %in% c(2, 15)
)
school_dat <-
get_education_data(level = "schools",
source = "ccd",
topic = "directory",
filters = list(year = seq(from = 2000, to = 2016, by = 2))) %>%
na_if(., -2) %>%
filter(
fips <= 59,
!fips %in% c(2, 15)
) %>%
as_tibble()
school_dat <-
get_education_data(level = "schools",
source = "ccd",
topic = "directory",
filters = list(year = seq(from = 2000, to = 2016, by = 2))) %>%
filter(
fips <= 59,
!fips %in% c(2, 15)
) %>%
as_tibble()
school_dat <-
get_education_data(level = "schools",
source = "ccd",
topic = "directory",
filters = list(year = seq(from = 2000, to = 2016, by = 2)))
school_dat <-
get_education_data(level = "schools",
source = "ccd",
topic = "directory",
filters = list(year = seq(from = 2000, to = 2016, by = 2)))
seq(from = 2000, to = 2016, by = 2)
school_dat <-
get_education_data(level = "schools",
source = "ccd",
topic = "directory",
filters = list(year = c(2000, 2002, 2004, 2006, 2008, 2010,
2012, 2014, 2016)))
ccd_school_dir <-
get_education_data(level = "schools",
source = "ccd",
topic = "directory",
filters = list(year = 2000))
ccd_school_dir %>% glimpse()
school_dat <-
get_education_data(level = "schools",
source = "ccd",
topic = "directory",
filters = list(year = seq(from = 2000, to = 2016, by = 2)))
library(tidyverse)
library(educationdata)
library(dbplyr)
ccd_dir <- "/Volumes/the safe box/CCD_2000_2016/ccd_2000-2016.sqlite"
ccd_db <- src_sqlite(ccd_dir, create = TRUE)
ccd_district_dir <-
get_education_data(level = "school-districts",
source = "ccd",
topic = "directory",
filters = list(year = 2000))
copy_to(ccd_db, ccd_district_dir)
rm(ccd_district_dir)
install.packages("educationdata")
install.packages("educationdata")
remotes::install_github('UrbanInstitute/education-data-package-r')
library(educationdata)
library(tidyverse)
library(educationdata)
library(dbplyr)
ccd_dir <- "/Volumes/the safe box/CCD_2000_2016/ccd_2000-2016.sqlite"
ccd_db <- src_sqlite(ccd_dir, create = TRUE)
ccd_district_dir <-
get_education_data(level = "school-districts",
source = "ccd",
topic = "directory",
filters = list(year = 2000))
library(gganimate)
#> Loading required package: ggplot2
# We'll start with a static plot
p <- ggplot(iris, aes(x = Petal.Width, y = Petal.Length)) +
geom_point()
plot(p)
anim <- p +
transition_states(Species,
transition_length = 2,
state_length = 1)
anim
knitr::opts_chunk$set(collapse = TRUE, warning = FALSE, message = FALSE, dpi = 340)
library(tidyverse)
library(tidycensus)
mtcars
sumary(lm(mpg ~ ., data = mtcars))
summary(lm(mpg ~ ., data = mtcars))
repl_python()
library(reticulate)
repl_python()
mt
repl_python()
import statsmodels.formula.api as sm
import pandas as pd
from sklearn.linear_model import LinearRegression
lm = LinearRegression()
mt = pd.DataFrame(r.mtcars)
mt
repl_python()
import statsmodels.formula.api as sm
?repl_python()
repl_python()
lm = LinearRegression()
mt = pd.DataFrame(r.mtcars)
mt
repl_python()
summary(lm(mpg ~ cyl + disp, data = mtcars))
repl_python()
df = data.frame("stress actions" = c(0.0 , -0.2 , -0.3 ,-0.4),
"Passif" = c(0 , -0.017279 , -0.025495 , -0.030506))
df <- data.frame("stress actions" = c(0.0 , -0.2 , -0.3 ,-0.4),
"Passif" = c(0 , -0.017279 , -0.025495 , -0.030506))
df
df <- data.frame("stress_actions" = c(0.0 , -0.2 , -0.3 ,-0.4),
"Passif" = c(0 , -0.017279 , -0.025495 , -0.030506))
df <- df %>%  mutate(stress_actions2 = stress_action^2,
stress_actions3 = stress_action^3)
df
df %>%  mutate(stress_actions2 = stress_actions^2,
stress_actions3 = stress_actions^3)
df <- data.frame("stress_actions" = c(0.0 , -0.2 , -0.3 ,-0.4),
"Passif" = c(0 , -0.017279 , -0.025495 , -0.030506))
df <- df %>%  mutate(stress_actions2 = stress_actions^2,
stress_actions3 = stress_actions^3)
sumary(lm(Passif~., data = df))
summary(lm(Passif~., data = df))
df
summary(lm(Passif~stress_actions, data = df))
summary(lm(Passif~stress_actions2, data = df))
summary(lm(Passif~stress_actions + stress_actions2, data = df))
df <- data.frame("Passif" = c(0 , -0.017279 , -0.025495 , -0.030506),
"stress_actions" = c(0.0 , -0.2 , -0.3 ,-0.4))
df <- df %>%  mutate(stress_actions2 = stress_actions^2,
stress_actions3 = stress_actions^3)
summary(lm(Passif~., data = df))
summary(glm(Passif~., data = df, family = "gaussian"))
repl_python()
round(-1.735e-1)
round(-1.735e-1, 10)
round(-1.735e-1, 5)
repl_python()
round(1.731e-17, 10)
round(1.731e-17)
round(1.731e-17, 20)
round(1.731e-17, 30)
round(-1.735e-18)
round(-1.735e-18, 10)
round(summary(lm(Passif~stress_actions+I(stress_actions^2)+I(stress_actions^3), data = df)), 10)
summary(lm(Passif~stress_actions+I(stress_actions^2)+I(stress_actions^3), data = df))
library(tidyverse)
library(tidycensus)
library(gganimate)
library(sf)
options(tigris_use_cache = TRUE)
options(tigris_class = "sf")
ny_counties <-
get_acs(
state = "NY",
geography = "county",
variables = "B19013_001",
geometry = TRUE
) %>%
mutate(NAME = toupper(str_remove(NAME, " County, New York"))) %>%
mutate(NAME = str_replace(NAME, "ST\\.", "SAINT"))
ny_counties <-
get_acs(
state = "NY",
geography = "county",
variables = "B19013_001",
geometry = TRUE
) %>%
mutate(NAME = toupper(str_remove(NAME, " County, New York"))) %>%
mutate(NAME = str_replace(NAME, "ST\\.", "SAINT"))
ny_counties <-
get_acs(
state = "IL",
geography = "county",
variables = "B19013_001",
geometry = TRUE
)
ny_counties <-
get_acs(
state = "NY",
geography = "county",
variables = "B19013_001",
geometry = TRUE
) %>%
mutate(NAME = toupper(str_remove(NAME, " County, New York"))) %>%
mutate(NAME = str_replace(NAME, "ST\\.", "SAINT"))
